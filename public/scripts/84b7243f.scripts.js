"use strict";angular.module("chatApp",["ngCookies","ngResource","ngSanitize","btford.socket-io"]).value("nickName","anonymous"),angular.module("chatApp").controller("SocketCtrl",["$log","$scope","chatSocket","messageFormatter","nickName",function(a,b,c,d,e){b.nickName=e,b.messageLog=[{ts:new Date,direction:"receive",is_bot:!0,username:"chat-bot",body:"WELCOME!"}],b.chatMessage="",b.sendMessage=function(d){var f=d.match("^/nick (.*)");if(angular.isDefined(f)&&angular.isArray(f)&&2===f.length){e=f[1],b.messageLog.push({ts:new Date,is_bot:!0,direction:"receive",username:"chat-bot",body:"nickname changed to "+e}),b.nickName=e,b.chatMessage="",b.$broadcast("chat message received")}else a.debug("sending message",d),c.emit("message",e,d),b.chatMessage=""},b.$on("socket:broadcast",function(c,d){return a.debug("got a message",c.name),d.payload?void b.$apply(function(){b.messageLog.push({ts:new Date,is_bot:"chat-bot"===d.source,direction:d.source==b.nickName?"sent":"receive",username:d.source,body:d.payload}),b.$broadcast("chat message received")}):void a.error("invalid message","event",c,"data",JSON.stringify(d))})}]),angular.module("chatApp").factory("chatSocket",["socketFactory",function(a){var b=a();return b.forward("broadcast"),b}]),angular.module("chatApp").value("messageFormatter",function(a,b,c){return a.toLocaleTimeString()+" - "+b+" - "+c+"\n"}),function(){angular.module("chatApp").directive("chatBox",["$timeout",function(a){return{restrict:"E",templateUrl:"/views/chatbox.html",controller:["$scope","$element",function(b,c){b.$on("chat message received",function(){a(function(){var a=c.find("#chatBody");a.scrollTop(900)},0)})}]}}])}();